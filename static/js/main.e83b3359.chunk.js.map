{"version":3,"sources":["components/navigation/NavBar.js","api/FirebaseConfig.js","api/FirebaseApi.js","actions/professionalFirebaseActions.js","constants/types.js","components/pages/HomePage.js","actions/blogFirebaseActions.js","components/cards/BlogCard.js","components/pages/BlogFirebasePage.js","api/djangoHttpApi.js","actions/blogDjangoActions.js","components/pages/BlogDjangoPage.js","utils/Utils.js","actions/projectFirebaseActions.js","components/cards/ProjectCard.js","components/pages/ProjectsPage.js","App.js","reducers/userReducer.js","reducers/professionalPageReducer.js","reducers/blogPageReducer.js","reducers/projectsPageReducer.js","reducers/rootReducer.js","index.js"],"names":["withRouter","props","react_default","a","createElement","className","Link","to","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","FirebaseApi","path","database","ref","once","collection","get","nameDoc","doc","key","orderByKey","equalTo","value","set","name","file","blob","Blob","type","storage","put","contentType","child","getDownloadURL","getGitlabLogoSuccess","image","gitlabLogo","getGithubLogoSuccess","githubLogo","getLinkedinLogoSuccess","linkedinLogo","getMediumLogoSuccess","mediumLogo","getProfessionalContentSuccess","contents","professionalProfileContent","spanish","getProfessionalImageSuccess","professionalProfilePhoto","handleError","message","HomePage","this","getProfessionalImage","getProfessionalContent","getLinkedinLogo","getGithubLogo","getGitlabLogo","getMediumLogo","_this$props","src","href","target","React","Component","connect","state","professionalPageReducer","dispatch","getState","_ref","getFirebase","getFirestore","getImage","then","res","catch","err","_ref2","getDocument","console","log","data","exists","_ref3","_ref5","_ref6","_ref4","getBlogsSuccess","posts","error","BlogCard","post","url","imageUrl","date","title","titleText","BlogFirebasePage","getBlogs","length","id","Object","keys","map","cards_BlogCard","index","Message","Header","blogPageReducer","getDocuments","postsList","forEach","concat","push","instanceDefault","axios","create","baseURL","djangoHttpApi","getAllBlogs","BlogDjangoPage","response","result","status","getProjectsSuccess","projects","ProjectCard","ProjectsPage","getProjects","cards_ProjectCard","projectsPageReducer","projectsList","App","BrowserRouter","navigation_NavBar","Route","exact","component","userReducer","arguments","undefined","initState","action","objectSpread","combineReducers","store","createStore","rootReducer","compose","applyMiddleware","thunk","withExtraArgument","reduxFirestore","FirestoreConfig","reactReduxFirebase","FirebaseConfig","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e83b3359.chunk.js","sourcesContent":["import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\n\nconst NavBar = (props) => {\n    return (\n        <nav className=\"nav wrapper blue darken-3\">\n            <div className=\"container\">\n                <a className=\"brand-logo\">Marco Maigua</a>\n                <ul className=\"right\">\n                    <li><Link to=\"/\">Home</Link></li>\n                    <li><Link to=\"/blogFirebasePage\">Blog</Link></li>\n                    <li><Link to=\"/projects\">Projects</Link></li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n//with Router is for givin the navbar the props input as a router\nexport default withRouter(NavBar);","import firebase, { firestore } from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/database'\nimport 'firebase/storage'\n//Firestore\n export const FirestoreConfig ={\n  apiKey: \"AIzaSyCaStbOcXxRGzjLmYzL_-IwTKdZAVjK5YY\",\n  authDomain: \"cms-personal.firebaseapp.com\",\n  databaseURL: \"https://cms-personal.firebaseio.com\",\n  projectId: \"cms-personal\",\n  storageBucket: \"cms-personal.appspot.com\",\n  messagingSenderId: \"524767534957\"\n}\n\n  //Just firebase\n  export const FirebaseConfig = {\n    apiKey: \"AIzaSyCaStbOcXxRGzjLmYzL_-IwTKdZAVjK5YY\",\n    authDomain: \"cms-personal.firebaseapp.com\",\n    databaseURL: \"https://cms-personal.firebaseio.com\",\n    projectId: \"cms-personal\",\n    storageBucket: \"cms-personal.appspot.com\",\n    messagingSenderId: \"524767534957\"\n  };\n\n  firebase.initializeApp(FirebaseConfig);\n  firebase.firestore().settings({timestampsInSnapshots:true});\n  \n  export default firebase;\n","import firebase from '../api/FirebaseConfig' //this is mandatory, must come from the setup\n\nclass FirebaseApi {\n\n    static getValues(path) {\n        return firebase\n            .database()\n            .ref(path)\n            .once('value')\n\n    }\n    /**\n     * This method is for using the firestore with collections\n     * @param {null} no input \n     */\n    static getDocuments(path){\n        return firebase\n          .firestore()\n          .collection(path)\n          .get();\n    }\n    /**\n     * This method is for using the firestore with collections\n     * @param {path} string This is the path of the collection\n     * @param {nameDoc} string This is the name of the document\n     */\n    static getDocument(path,nameDoc) {\n        return firebase\n          .firestore()\n          .collection(path)\n          .doc(nameDoc)\n          .get();\n      }\n\n    static getValueByKey(path, key) {\n        return firebase\n            .database()\n            .ref(path)\n            .orderByKey()\n            .equalTo(key)\n            .once('child_added');\n    }\n\n    static setValue(path, value) {\n        return firebase\n            .database()\n            .ref(path)\n            .set(value);\n    }\n\n    static saveFile(path, name, file) {\n        // let file =new File('/home/nemesis1346/Documents/UniversityProjects/takijunchik/react-front-end/data/audioFiles/audio.mp3');\n        var blob = new Blob(['/home/nemesis1346/Documents/UniversityProjects/takijunchik/react-front-end/data/audioFiles/audio.mp3'], { type: 'audio/mp3' });\n\n        let nameFile = name;//?\n        let metadata = {\n            contentType: 'audio/mp3'\n        }\n        return firebase\n            .storage()\n            .ref(path + '/' + name)\n            .put(blob, metadata)\n    }\n    static getImage(path){\n        return firebase\n        .storage()\n        .ref()\n        .child(path)\n        .getDownloadURL();\n    }\n}\nexport default FirebaseApi;","import FirebaseApi from \"../api/FirebaseApi\";\nimport {\n  ERROR_MIDDLEWARE,\n  GET_IMAGE_SUCCESS,\n  GET_CONTENT_SUCCESS,\n  GET_LINKEDIN_LOGO_SUCCESS,\n  GET_MEDIUM_LOGO_SUCCESS,\n  GET_GITHUB_LOGO_SUCCESS,\n  GET_GITLAB_LOGO_SUCCESS\n} from \"../constants/types\";\n\nexport const getProfessionalImage = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getImage(\"/photos/professional/professionalPhoto1.jpg\")\n      .then(res => {\n        dispatch(getProfessionalImageSuccess(res));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\n\nexport const getProfessionalContent = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getDocument(\"/content\",\"UJ9dOUKXi627jKWxPDPb\")\n      .then(doc => {\n        console.log(doc.data());\n        if(doc.exists){\n          console.log(doc);\n          dispatch(getProfessionalContentSuccess(doc.data()));\n        }\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\nexport const getLinkedinLogo = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getImage(\"/photos/logos/linkedin.png\")\n      .then(res => {\n        dispatch(getLinkedinLogoSuccess(res));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\nexport const getMediumLogo = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getImage(\"/photos/logos/medium.png\")\n      .then(res => {\n        dispatch(getMediumLogoSuccess(res));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\nexport const getGithubLogo = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getImage(\"/photos/logos/github.png\")\n      .then(res => {\n        dispatch(getGithubLogoSuccess(res));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\nexport const getGitlabLogo = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getImage(\"/photos/logos/gitlab.jpg\")\n      .then(res => {\n        dispatch(getGitlabLogoSuccess(res));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\nexport const getGitlabLogoSuccess = image => {\n  return {\n    type: GET_GITLAB_LOGO_SUCCESS,\n    gitlabLogo: image\n  };\n};\n\nconst getGithubLogoSuccess = image => {\n  return {\n    type: GET_GITHUB_LOGO_SUCCESS,\n    githubLogo: image\n  };\n};\nconst getLinkedinLogoSuccess = image => {\n  return {\n    type: GET_LINKEDIN_LOGO_SUCCESS,\n    linkedinLogo: image\n  };\n};\nconst getMediumLogoSuccess = image => {\n  return {\n    type: GET_MEDIUM_LOGO_SUCCESS,\n    mediumLogo: image\n  };\n};\n\nconst getProfessionalContentSuccess = contents => {\n  return {\n    type: GET_CONTENT_SUCCESS,\n    professionalProfileContent: contents.spanish\n  };\n};\n\nconst getProfessionalImageSuccess = image => {\n  return {\n    type: GET_IMAGE_SUCCESS,\n    professionalProfilePhoto: image\n  };\n};\n\nconst handleError = message => {\n  return {\n    type: ERROR_MIDDLEWARE,\n    message: message\n  };\n};\n","export const ERROR_MIDDLEWARE = \"ERROR_MIDDLEWARE\";\nexport const GET_IMAGE_SUCCESS = \"GET_IMAGE_SUCCESS\";\nexport const GET_CONTENT_SUCCESS = \"GET_CONTENT_SUCCESS\";\nexport const GET_LINKEDIN_LOGO_SUCCESS = \"GET_LINKEDIN_LOGO_SUCCESS\";\nexport const GET_MEDIUM_LOGO_SUCCESS = \"GET_MEDIUM_LOGO_SUCCESS\";\nexport const GET_GITHUB_LOGO_SUCCESS = \"GET_GITHUB_LOGO_SUCCESS\";\nexport const GET_GITLAB_LOGO_SUCCESS = \"GET_GITLAB_LOGO_SUCCESS\";\nexport const GET_BLOGS_SUCCESS = \"GET_BLOGS_SUCCESS\";\nexport const GET_PROJECTS_SUCCESS=\"GET_PROJECTS_SUCCESS\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getProfessionalImage,\n  getProfessionalContent,\n  getLinkedinLogo,\n  getGithubLogo,\n  getGitlabLogo,\n  getMediumLogo\n} from \"../../actions/professionalFirebaseActions\";\n\nimport \"../styles/homePage.css\";\n\nclass HomePage extends React.Component {\n  componentWillMount() {\n    this.props.getProfessionalImage();\n    this.props.getProfessionalContent();\n    this.props.getLinkedinLogo();\n    this.props.getLinkedinLogo();\n    this.props.getGithubLogo();\n    this.props.getGitlabLogo();\n    this.props.getMediumLogo();\n  }\n  render() {\n    const {\n      professionalProfilePhoto,\n      professionalProfileContent,\n      linkedinLogo,\n      githubLogo,\n      gitlabLogo,\n      mediumLogo\n    } = this.props;\n    return (\n      <div className=\"home-page-container\">\n        <div className=\"left-container holder\">\n          <img src={professionalProfilePhoto} />\n        </div>\n        <div className=\"right-container\">\n          <h1>Marco Maigua</h1>\n          <a className=\"waves-effect waves-light btn button-resume\" href=\"https://firebasestorage.googleapis.com/v0/b/cms-personal.appspot.com/o/documents%2Fcv_marco_maigua.pdf?alt=media&token=b9a96229-2869-4eba-ac9a-639aef6dc25b\"  target=\"_blank\">\n            <i>Personal Resume</i>\n          </a>\n\n          <p>{professionalProfileContent}</p>\n          <div className=\"social-media-container\">\n            <a\n              href=\"https://www.linkedin.com/in/marco-maigua-66822584/\"\n              target=\"_blank\"\n            >\n              <img src={linkedinLogo} />\n            </a>\n            <a href=\"https://github.com/nemesis1346\" target=\"_blank\">\n              <img src={githubLogo} />\n            </a>\n            <a href=\"https://gitlab.com/nemesis1346\" target=\"_blank\">\n              <img src={gitlabLogo} />\n            </a>\n            <a href=\"https://medium.com/@marco.maigua1346\" target=\"_blank\">\n              <img src={mediumLogo} />\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToPropsHomePage = state => {\n  //In this case objects is gonna be applied to the props of the component\n  return {\n    professionalProfilePhoto:\n      state.professionalPageReducer.professionalProfilePhoto,\n    professionalProfileContent:\n      state.professionalPageReducer.professionalProfileContent,\n    linkedinLogo: state.professionalPageReducer.linkedinLogo,\n    githubLogo: state.professionalPageReducer.githubLogo,\n    gitlabLogo: state.professionalPageReducer.gitlabLogo,\n    mediumLogo: state.professionalPageReducer.mediumLogo\n  };\n};\n\nexport default connect(\n  mapStateToPropsHomePage,\n  {\n    getProfessionalImage,\n    getProfessionalContent,\n    getLinkedinLogo,\n    getGithubLogo,\n    getGitlabLogo,\n    getMediumLogo\n  }\n)(HomePage);\n","import FirebaseApi from \"../api/FirebaseApi\";\nimport {\n  ERROR_MIDDLEWARE,\n  GET_BLOGS_SUCCESS,\n} from \"../constants/types\";\n\nexport const getBlogs = () => {\n    console.log('gets here');\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getDocuments(\"/posts\")\n      .then(res => {\n          let postsList = [];\n          res.forEach(doc => {\n            console.log(`${doc.id} => ${doc.data()}`);\n            postsList.push(doc.data());\n          });\n        dispatch(getBlogsSuccess(postsList));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\n\n\nconst getBlogsSuccess = posts => {\n    return {\n      type: GET_BLOGS_SUCCESS,\n      posts: posts\n    };\n  };\n  \n  const handleError = message => {\n    return {\n      type: ERROR_MIDDLEWARE,\n      error: message\n    };\n  };\n  ","import React from 'react';\nimport '../styles/blogCard.scss';\n\nclass BlogCard extends React.Component {\n\n    render() {\n        const { post } = this.props;\n        console.log(post.url);\n        return (\n            <div className=\"post card\">\n                <div className=\"img-container\">\n                <a href={post.url} target=\"_blank\"> \n                    <img src={post.imageUrl}></img> </a>\n                </div>\n                <div className=\"card-body\">\n                    <p >{post.date}</p>\n                    <h2>{post.title}</h2>\n                    <p >{post.titleText}</p>\n                       <a href={post.url}  target=\"_blank\"><i className=\"waves-effect waves-light btn\">Read more...</i></a> \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BlogCard;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    getBlogs,\n} from \"../../actions/blogFirebaseActions\";\nimport BlogCard from '../cards/BlogCard';\nimport { Message } from 'semantic-ui-react'\nimport '../styles/blogPage.scss';\n\n//This page done for the firebase framework with just links of medium\nclass BlogFirebasePage extends React.Component {\n    componentWillMount() {\n        this.props.getBlogs();\n    }\n    render() {\n        console.log('POSTS');\n        console.log(this.props);\n        const {\n            posts,\n            error\n        } = this.props;\n        return (\n            <div className=\"blog-page-container\">\n                {posts && posts.length > 0 ? (\n                    <div className=\"app-card-list\" id=\"app-card-list\">\n                        {\n                            Object\n                                .keys(posts)\n                                .map(key => <BlogCard key={key} index={key} post={posts[key]} />)\n                        }\n                    </div>\n                ) : (\n                        <Message >\n                            <Message.Header>Error</Message.Header>\n                            <p>{error}</p>\n                        </Message>\n                    )}\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToPropsBlogPage = state => {\n    //In this case objects is gonna be applied to the props of the component\n    return {\n        posts: state.blogPageReducer.posts,\n        error: state.blogPageReducer.error\n    };\n};\n\nexport default connect(\n    mapStateToPropsBlogPage,\n    {\n        getBlogs,\n    }\n)(BlogFirebasePage);\n","import axios from 'axios';\nimport { parseResponse } from '../utils/Utils';\n\n//const instance = axios.create({ baseURL: 'http://35.190.131.104:8888' })\n//const instance = axios.create({ baseURL: 'http://localhost:8888' }) // this is for blockchain\nconst instanceDefault = axios.create({ baseURL: 'http://localhost:8000' }); // this is for firebase\n/**\n * This File is for parsing and anything processing middleware with diferent directions\n */\nexport default {\n    blog: {\n        getAllBlogs: () => {\n            return instanceDefault.get('/api/blogs')\n        }\n           \n    }\n}\n","import {\n  ERROR_MIDDLEWARE,\n  GET_BLOGS_SUCCESS,\n} from \"../constants/types\";\nimport djangoHttpApi from '../api/djangoHttpApi';\nimport {parseResponseDjango} from '../utils/Utils';\n\nexport const getBlogs = () => {\n  return (dispatch) => {\n    djangoHttpApi.blog.getAllBlogs()\n      .then(res => {\n        console.log('Response')\n        console.log(res)\n        let result=parseResponseDjango(res)\n        console.log(result)\n          // let postsList = [];\n          // res.forEach(doc => {\n          //   postsList.push(doc.data());\n          // });\n        //dispatch(getBlogsSuccess(postsList));\n      })\n      .catch(err => {\n        console.log(err)\n        dispatch(handleError(err.message));\n      });\n  };\n};\n\n\nconst getBlogsSuccess = posts => {\n    return {\n      type: GET_BLOGS_SUCCESS,\n      posts: posts\n    };\n  };\n  \n  const handleError = message => {\n    return {\n      type: ERROR_MIDDLEWARE,\n      error: message\n    };\n  };\n  ","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    getBlogs,\n} from \"../../actions/blogDjangoActions\";\nimport BlogCard from '../cards/BlogCard';\nimport { Message } from 'semantic-ui-react'\nimport '../styles/blogPage.scss';\n\n//This page done for the firebase framework with just links of medium\nclass BlogDjangoPage extends React.Component {\n    componentWillMount() {\n        this.props.getBlogs();\n    }\n    render() {\n        console.log('POSTS');\n        console.log(this.props);\n        const {\n            posts,\n            error\n        } = this.props;\n        return (\n            <div className=\"blog-page-container\">\n                {posts && posts.length > 0 ? (\n                    <div className=\"app-card-list\" id=\"app-card-list\">\n                        {\n                            Object\n                                .keys(posts)\n                                .map(key => <BlogCard key={key} index={key} post={posts[key]} />)\n                        }\n                    </div>\n                ) : (\n                        <Message >\n                            <Message.Header>Error</Message.Header>\n                            <p>{error}</p>\n                        </Message>\n                    )}\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToPropsBlogPage = state => {\n    //In this case objects is gonna be applied to the props of the component\n    return {\n        posts: state.blogPageReducer.posts,\n        error: state.blogPageReducer.error\n    };\n};\n\nexport default connect(\n    mapStateToPropsBlogPage,\n    {\n        getBlogs,\n    }\n)(BlogDjangoPage);\n","export const parseResponse = (response) => {\n    let body = JSON.parse(response);\n    if (body.status == '200') {\n        return body.data;\n    } else {\n        return body.message;\n    }\n}\nexport const parseResponseDjango = (response) => {\n   \n    if (response.status == '200') {\n        return response.data;\n    } else {\n        return 'Something went wrong';\n    }\n}\n//  MORE EFFICIENT, BUT LESS FUN\n/**\n * @description Remove duplicates from an array of objects in javascript\n * @param arr - Array of objects\n * @param prop - Property of each object to compare\n * @returns {Array}\n */\nexport const removeDuplicatesProp = (arr, prop) => {\n    let obj = {};\n    return Object.keys(arr.reduce((prev, next) => {\n        if (!obj[next[prop]]) obj[next[prop]] = next;\n        return obj;\n    }, obj)).map((i) => obj[i]);\n}\n\n\nexport const parseContent = (content) => {\n    // console.log(content);\n    let entireContent = content;\n    let finalResult = [];\n\n    //Processing for the entire sentence\n    for (let index = 0; index <= entireContent.length; index++) {\n        for (let j = index; j <= entireContent.length; j++) {\n            const currentResult = entireContent.slice(index, j).trim();\n            if (currentResult) {\n                finalResult.push(currentResult.toLowerCase());\n            }\n        }\n    }\n    finalResult = this.removeDuplicates(finalResult);\n    return finalResult;\n}\n/**\n * @description Remove duplicates\n */\nexport const removeDuplicates = (arr) => {\n    let unique_array = []\n    for (let i = 0; i < arr.length; i++) {\n        if (unique_array.indexOf(arr[i]) == -1) {\n            unique_array.push(arr[i])\n        }\n    }\n    return unique_array\n}","import FirebaseApi from \"../api/FirebaseApi\";\nimport {\n  ERROR_MIDDLEWARE,\n  GET_PROJECTS_SUCCESS,\n} from \"../constants/types\";\n\nexport const getProjects = () => {\n    console.log('gets here');\n  return (dispatch) => {\n    FirebaseApi.getDocuments(\"/projects\")\n      .then(res => {\n          let projectsList = [];\n          res.forEach(doc => {\n            console.log(`${doc.id} => ${doc.data()}`);\n            projectsList.push(doc.data());\n          });\n        dispatch(getProjectsSuccess(projectsList));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\n\n\nconst getProjectsSuccess = projects => {\n    return {\n      type: GET_PROJECTS_SUCCESS,\n      projects: projects\n    };\n  };\n  \n  const handleError = message => {\n    return {\n      type: ERROR_MIDDLEWARE,\n      error: message\n    };\n  };\n  ","import React from 'react';\nimport '../styles/projectCard.scss';\n\nclass ProjectCard extends React.Component {\n\n    render() {\n        const { post } = this.props;\n        console.log(post.url);\n        return (\n            <div className=\"post card\">\n                <div className=\"img-container\">\n                <a href={post.url} target=\"_blank\"> \n                    <img src={post.imageUrl}></img> </a>\n                </div>\n                <div className=\"card-body\">\n                    <h2>{post.title}</h2>\n                    <p >{post.titleText}</p>\n                       <a href={post.url}  target=\"_blank\"><i className=\"waves-effect waves-light btn\">See Project</i></a> \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProjectCard;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    getProjects,\n} from \"../../actions/projectFirebaseActions\";//change\nimport ProjectCard from '../cards/ProjectCard';\nimport { Message } from 'semantic-ui-react'\nimport '../styles/blogPage.scss';\n\n//This page done for the firebase framework with just links of medium\nclass ProjectsPage extends React.Component {\n    componentWillMount() {\n        this.props.getProjects();\n    }\n    render() {\n        console.log('PROJECTS');\n        console.log(this.props);\n        const {\n            projects,\n            error\n        } = this.props;\n        return (\n            <div>\n                {projects && projects.length > 0 ? (\n                    <div className=\"app-card-list\" id=\"app-card-list\">\n                        {\n                            Object\n                                .keys(projects)\n                                .map(key => <ProjectCard key={key} index={key} post={projects[key]} />)\n                        }\n                    </div>\n                ) : (\n                        <Message >\n                            <Message.Header>Error</Message.Header>\n                            <p>{error}</p>\n                        </Message>\n                    )}\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToPropsProjectsPage = state => {\n    //In this case objects is gonna be applied to the props of the component\n    return {\n        projects: state.projectsPageReducer.projects,\n        error: state.projectsPageReducer.error\n    };\n};\n\nexport default connect(\n    mapStateToPropsProjectsPage,\n    {\n        getProjects,\n    }\n)(ProjectsPage);\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport NavBar from \"./components/navigation/NavBar\";\nimport HomePage from \"./components/pages/HomePage\";\nimport BlogFirebasePage from './components/pages/BlogFirebasePage';\nimport BlogDjangoPage from './components/pages/BlogDjangoPage';\nimport ProjectsPage from './components/pages/ProjectsPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/blogFirebasePage\" exact component={BlogFirebasePage} />\n          <Route path = \"/blogDjangoPage\" exact component = {BlogDjangoPage}></Route>\n          <Route path = '/projects' exact component = {ProjectsPage}></Route>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","\nconst userReducer = (state = {}, action = {}) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import {\n  GET_IMAGE_SUCCESS,\n  GET_CONTENT_SUCCESS,\n  GET_GITHUB_LOGO_SUCCESS,\n  GET_LINKEDIN_LOGO_SUCCESS,\n  GET_GITLAB_LOGO_SUCCESS,\n  GET_MEDIUM_LOGO_SUCCESS\n} from \"../constants/types\";\nconst initState = {\n  professionalProfilePhoto: null,\n  professionalProfileContent: null,\n  linkedinLogo: null,\n  mediumLogo: null,\n  githubLogo: null,\n  gitlabLogo: null\n};\nconst professionalPageReducer = (state = initState, action = {}) => {\n  switch (action.type) {\n    case GET_IMAGE_SUCCESS:\n      return {\n        ...state,\n        professionalProfilePhoto: action.professionalProfilePhoto\n      };\n    case GET_CONTENT_SUCCESS:\n      return {\n        ...state,\n        professionalProfileContent: action.professionalProfileContent\n      };\n    case GET_LINKEDIN_LOGO_SUCCESS:\n      return {\n        ...state,\n        linkedinLogo: action.linkedinLogo\n      };\n    case GET_MEDIUM_LOGO_SUCCESS:\n      return {\n        ...state,\n        mediumLogo: action.mediumLogo\n      };\n    case GET_GITHUB_LOGO_SUCCESS:\n      return {\n        ...state,\n        githubLogo: action.githubLogo\n      };\n    case GET_GITLAB_LOGO_SUCCESS:\n      return {\n        ...state,\n        gitlabLogo: action.gitlabLogo\n      };\n    default:\n      return state;\n  }\n};\n\nexport default professionalPageReducer;\n","import { GET_BLOGS_SUCCESS, ERROR_MIDDLEWARE } from '../constants/types';\n\nconst initState = {\n    posts: [],\n    error:''\n}\n\nconst blogPageReducer = (state = initState, action = {}) => {\n    switch (action.type) {\n        case GET_BLOGS_SUCCESS:\n            return {\n                ...state,\n                posts: action.posts\n            }\n        case ERROR_MIDDLEWARE:\n            return {\n                ...state,\n                error: action.error\n            }\n        default:\n            return state;\n    }\n}\n\nexport default blogPageReducer;","import { GET_PROJECTS_SUCCESS, ERROR_MIDDLEWARE } from '../constants/types';\n\nconst initState = {\n    projects: [],\n    error:''\n}\n\nconst projectsPageReducer = (state = initState, action = {}) => {\n    switch (action.type) {\n        case GET_PROJECTS_SUCCESS:\n            return {\n                ...state,\n                projects: action.projects\n            }\n        case ERROR_MIDDLEWARE:\n            return {\n                ...state,\n                error: action.error\n            }\n        default:\n            return state;\n    }\n}\n\nexport default projectsPageReducer;","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport professionalPageReducer from './professionalPageReducer';\nimport blogPageReducer from './blogPageReducer';\nimport projectsPageReducer from './projectsPageReducer';\n//This is for comining all different reducers\nexport default combineReducers({\n    userReducer,\n    professionalPageReducer,\n    blogPageReducer,\n    projectsPageReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport FirestoreConfig from './api/FirebaseConfig';\nimport FirebaseConfig from './api/FirebaseConfig';\nimport \"semantic-ui-css/semantic.min.css\";\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(FirestoreConfig),\n        reactReduxFirebase(FirebaseConfig)\n    )\n);\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}