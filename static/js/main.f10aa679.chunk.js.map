{"version":3,"sources":["components/navigation/NavBar.js","constants/types.js","actions/setConstantsActions.js","api/FirebaseConfig.js","api/FirebaseApi.js","actions/professionalFirebaseActions.js","components/pages/HomePage.js","actions/blogFirebaseActions.js","components/cards/BlogCard.js","components/pages/BlogFirebasePage.js","api/djangoHttpApi.js","actions/blogDjangoActions.js","components/pages/BlogDjangoPage.js","utils/Utils.js","actions/projectFirebaseActions.js","components/cards/ProjectCard.js","components/pages/ProjectsPage.js","App.js","reducers/userReducer.js","reducers/professionalPageReducer.js","reducers/blogPageReducer.js","reducers/projectsPageReducer.js","reducers/constantReducers.js","reducers/rootReducer.js","index.js"],"names":["NavBar","state","language","onItemClick","e","_this","props","setLanguage","currentTarget","firstChild","text","M","AutoInit","selects","document","querySelectorAll","FormSelect","init","react_default","a","createElement","id","className","onClick","this","href","Link","to","data-target","React","Component","connect","type","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","FirebaseApi","path","database","ref","once","collection","get","nameDoc","doc","key","orderByKey","equalTo","property","console","log","orderBy","value","set","name","file","blob","Blob","storage","put","contentType","child","getDownloadURL","getGitlabLogoSuccess","image","gitlabLogo","getGithubLogoSuccess","githubLogo","getLinkedinLogoSuccess","linkedinLogo","getMediumLogoSuccess","mediumLogo","getProfessionalContentSuccess","contents","professionalProfileContent","getProfessionalImageSuccess","professionalProfilePhoto","handleError","message","HomePage","getProfessionalImage","getProfessionalContent","getLinkedinLogo","getGithubLogo","getGitlabLogo","getMediumLogo","_this$props","content","Spanish","English","src","target","professionalPageReducer","constantReducer","dispatch","getState","_ref","getFirebase","getFirestore","getImage","then","res","catch","err","_ref2","getDocument","exists","data","_ref3","_ref5","_ref6","_ref4","getBlogsSuccess","posts","error","BlogCard","post","url","imageUrl","date","title","titleText","BlogFirebasePage","getBlogsByDatetime","length","Object","keys","map","cards_BlogCard","index","Message","Header","blogPageReducer","getBlogs","getDocuments","postsList","forEach","concat","push","getDocumentsOrderedBy","instanceDefault","axios","create","baseURL","djangoHttpApi","getAllBlogs","BlogDjangoPage","response","result","status","getProjectsSuccess","projects","ProjectCard","project","titleSpanish","textSpanish","titleEnglish","textEnglish","urlProject","urlGithub","urlFile","urlExecutable","ProjectsPage","getProjectsByDatetime","cards_ProjectCard","projectsPageReducer","getProjects","projectsList","App","BrowserRouter","basename","process","navigation_NavBar","Route","exact","component","userReducer","arguments","undefined","initState","action","objectSpread","combineReducers","store","createStore","rootReducer","compose","applyMiddleware","thunk","withExtraArgument","reduxFirestore","FirestoreConfig","reactReduxFirebase","FirebaseConfig","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.f10aa679.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n//This is the proper way to use materialize css in react\nimport M from \"materialize-css\";\nimport {SPANISH_LANGUAGE,ENGLISH_LANGUAGE} from '../../constants/types';\nimport {setLanguage} from '../../actions/setConstantsActions';\nimport { connect } from \"react-redux\";\n\nclass NavBar extends React.Component {\n    state={\n        \"language\":'Language'\n    }\n\n    componentDidMount() {\n        // Auto initialize all the things!\n        M.AutoInit();\n        let selects = document.querySelectorAll('select');\n        M.FormSelect.init(selects, {});\n    }\n    onItemClick=(e)=>{\n        this.props.setLanguage(e.currentTarget.firstChild.text);\n    }\n    render() {\n        return (\n            <div>\n                <ul id=\"dropdown1\" className=\"dropdown-content\">\n                    <li onClick={this.onItemClick} ><a href=\"#!\">{ENGLISH_LANGUAGE}</a></li>\n                    <li onClick={this.onItemClick} ><a href=\"#!\">{SPANISH_LANGUAGE}</a></li>\n                </ul>\n                <nav className=\"nav wrapper blue darken-3\">\n                    <div className=\"container\">\n                        <a className=\"brand-logo left\">Marco Maigua</a>\n                        <ul className=\"right\">\n                            <li><Link to=\"/\">Home</Link></li>\n                            <li><Link to=\"/blogFirebasePage\">Blog</Link></li>\n                            <li><Link to=\"/projects\">Projects</Link></li>\n                            <li><a className=\"dropdown-trigger\" href=\"#!\" data-target=\"dropdown1\">{this.state.language}<i className=\"material-icons right\">arrow_drop_down</i></a></li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n//with Router is for givin the navbar the props input as a router\nexport default connect(null, {setLanguage})(NavBar);","export const ERROR_MIDDLEWARE = \"ERROR_MIDDLEWARE\";\nexport const GET_IMAGE_SUCCESS = \"GET_IMAGE_SUCCESS\";\nexport const GET_CONTENT_SUCCESS = \"GET_CONTENT_SUCCESS\";\nexport const GET_LINKEDIN_LOGO_SUCCESS = \"GET_LINKEDIN_LOGO_SUCCESS\";\nexport const GET_MEDIUM_LOGO_SUCCESS = \"GET_MEDIUM_LOGO_SUCCESS\";\nexport const GET_GITHUB_LOGO_SUCCESS = \"GET_GITHUB_LOGO_SUCCESS\";\nexport const GET_GITLAB_LOGO_SUCCESS = \"GET_GITLAB_LOGO_SUCCESS\";\nexport const GET_BLOGS_SUCCESS = \"GET_BLOGS_SUCCESS\";\nexport const GET_PROJECTS_SUCCESS=\"GET_PROJECTS_SUCCESS\";\nexport const SET_LANGUAGE=\"SET_LANGUAGE\";\nexport const SPANISH_LANGUAGE= \"Spanish\";\nexport const ENGLISH_LANGUAGE=\"English\";","import {\n    SET_LANGUAGE\n} from '../constants/types';\nexport const setLanguage = (language) => {\n    return {\n        type: SET_LANGUAGE,\n        language: language\n    };\n}","import firebase, { firestore } from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/database'\nimport 'firebase/storage'\n//Firestore\n export const FirestoreConfig ={\n  apiKey: \"AIzaSyCaStbOcXxRGzjLmYzL_-IwTKdZAVjK5YY\",\n  authDomain: \"cms-personal.firebaseapp.com\",\n  databaseURL: \"https://cms-personal.firebaseio.com\",\n  projectId: \"cms-personal\",\n  storageBucket: \"cms-personal.appspot.com\",\n  messagingSenderId: \"524767534957\"\n}\n\n  //Just firebase\n  export const FirebaseConfig = {\n    apiKey: \"AIzaSyCaStbOcXxRGzjLmYzL_-IwTKdZAVjK5YY\",\n    authDomain: \"cms-personal.firebaseapp.com\",\n    databaseURL: \"https://cms-personal.firebaseio.com\",\n    projectId: \"cms-personal\",\n    storageBucket: \"cms-personal.appspot.com\",\n    messagingSenderId: \"524767534957\"\n  };\n\n  firebase.initializeApp(FirebaseConfig);\n  firebase.firestore().settings({timestampsInSnapshots:true});\n  \n  export default firebase;\n","import firebase from '../api/FirebaseConfig' //this is mandatory, must come from the setup\n\nclass FirebaseApi {\n\n    static getValues(path) {\n        return firebase\n            .database()\n            .ref(path)\n            .once('value')\n\n    }\n    /**\n     * This method is for using the firestore with collections\n     * @param {null} no input \n     */\n    static getDocuments(path) {\n        return firebase\n            .firestore()\n            .collection(path)\n            .get();\n    }\n    /**\n     * This method is for using the firestore with collections\n     * @param {path} string This is the path of the collection\n     * @param {nameDoc} string This is the name of the document\n     */\n    static getDocument(path, nameDoc) {\n        return firebase\n            .firestore()\n            .collection(path)\n            .doc(nameDoc)\n            .get();\n    }\n\n    static getValueByKey(path, key) {\n        return firebase\n            .database()\n            .ref(path)\n            .orderByKey()\n            .equalTo(key)\n            .once('child_added');\n    }\n\n    static getDocumentsOrderedBy(path, property) {\n        console.log('is getting here');\n\n        return firebase\n            .firestore()\n            .collection(path)\n            .orderBy(property,'desc')\n            .get();\n    }\n\n    static setValue(path, value) {\n        return firebase\n            .database()\n            .ref(path)\n            .set(value);\n    }\n\n    static saveFile(path, name, file) {\n        // let file =new File('/home/nemesis1346/Documents/UniversityProjects/takijunchik/react-front-end/data/audioFiles/audio.mp3');\n        var blob = new Blob(['/home/nemesis1346/Documents/UniversityProjects/takijunchik/react-front-end/data/audioFiles/audio.mp3'], { type: 'audio/mp3' });\n\n        let nameFile = name;//?\n        let metadata = {\n            contentType: 'audio/mp3'\n        }\n        return firebase\n            .storage()\n            .ref(path + '/' + name)\n            .put(blob, metadata)\n    }\n    static getImage(path) {\n        return firebase\n            .storage()\n            .ref()\n            .child(path)\n            .getDownloadURL();\n    }\n}\nexport default FirebaseApi;","import FirebaseApi from \"../api/FirebaseApi\";\nimport {\n  ERROR_MIDDLEWARE,\n  GET_IMAGE_SUCCESS,\n  GET_CONTENT_SUCCESS,\n  GET_LINKEDIN_LOGO_SUCCESS,\n  GET_MEDIUM_LOGO_SUCCESS,\n  GET_GITHUB_LOGO_SUCCESS,\n  GET_GITLAB_LOGO_SUCCESS\n} from \"../constants/types\";\n\nexport const getProfessionalImage = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getImage(\"/photos/professional/professionalPhoto1.jpg\")\n      .then(res => {\n        dispatch(getProfessionalImageSuccess(res));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\n\nexport const getProfessionalContent = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getDocument(\"/content\",\"UJ9dOUKXi627jKWxPDPb\")\n      .then(doc => {\n        if(doc.exists){\n          console.log('RESPONSE');\n          console.log(doc.data());\n          dispatch(getProfessionalContentSuccess(doc.data()));\n        }\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\nexport const getLinkedinLogo = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getImage(\"/photos/logos/linkedin.png\")\n      .then(res => {\n        dispatch(getLinkedinLogoSuccess(res));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\nexport const getMediumLogo = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getImage(\"/photos/logos/medium.png\")\n      .then(res => {\n        dispatch(getMediumLogoSuccess(res));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\nexport const getGithubLogo = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getImage(\"/photos/logos/github.png\")\n      .then(res => {\n        dispatch(getGithubLogoSuccess(res));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\nexport const getGitlabLogo = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getImage(\"/photos/logos/gitlab.jpg\")\n      .then(res => {\n        dispatch(getGitlabLogoSuccess(res));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\nexport const getGitlabLogoSuccess = image => {\n  return {\n    type: GET_GITLAB_LOGO_SUCCESS,\n    gitlabLogo: image\n  };\n};\n\nconst getGithubLogoSuccess = image => {\n  return {\n    type: GET_GITHUB_LOGO_SUCCESS,\n    githubLogo: image\n  };\n};\nconst getLinkedinLogoSuccess = image => {\n  return {\n    type: GET_LINKEDIN_LOGO_SUCCESS,\n    linkedinLogo: image\n  };\n};\nconst getMediumLogoSuccess = image => {\n  return {\n    type: GET_MEDIUM_LOGO_SUCCESS,\n    mediumLogo: image\n  };\n};\n\nconst getProfessionalContentSuccess = contents => {\n  return {\n    type: GET_CONTENT_SUCCESS,\n    professionalProfileContent: contents\n  };\n};\n\nconst getProfessionalImageSuccess = image => {\n  return {\n    type: GET_IMAGE_SUCCESS,\n    professionalProfilePhoto: image\n  };\n};\n\nconst handleError = message => {\n  return {\n    type: ERROR_MIDDLEWARE,\n    message: message\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getProfessionalImage,\n  getProfessionalContent,\n  getLinkedinLogo,\n  getGithubLogo,\n  getGitlabLogo,\n  getMediumLogo\n} from \"../../actions/professionalFirebaseActions\";\nimport { SPANISH_LANGUAGE, ENGLISH_LANGUAGE } from '../../constants/types';\nimport \"../styles/homePage.css\";\n\nclass HomePage extends React.Component {\n  componentWillMount() {\n\n    this.props.getProfessionalImage();\n    this.props.getProfessionalContent();\n    this.props.getLinkedinLogo();\n    this.props.getLinkedinLogo();\n    this.props.getGithubLogo();\n    this.props.getGitlabLogo();\n    this.props.getMediumLogo();\n  }\n  render() {\n    const {\n      professionalProfilePhoto,\n      professionalProfileContent,\n      linkedinLogo,\n      githubLogo,\n      gitlabLogo,\n      mediumLogo\n    } = this.props;\n    console.log('PROFILE CONTENT');\n    console.log(this.props.professionalProfileContent);\n    let language = this.props.language;\n    let content=\"Loading\";\n    if(professionalProfileContent){\n      switch (language) {\n        case SPANISH_LANGUAGE:\n          content = professionalProfileContent.Spanish;\n          break;\n        case ENGLISH_LANGUAGE:\n          content = professionalProfileContent.English;\n          break;\n        default:\n          content = professionalProfileContent.English;\n          break;\n      }\n    }\n    \n    return (\n\n      <div className=\"home-page-container\">\n        <div className=\"left-container holder\">\n          <img src={professionalProfilePhoto} />\n        </div>\n        <div className=\"right-container\">\n          <h1>Marco Maigua</h1>\n          <a className=\"waves-effect waves-light btn button-resume\" href=\"https://firebasestorage.googleapis.com/v0/b/cms-personal.appspot.com/o/documents%2Fcv_marco_maigua.pdf?alt=media&token=b9a96229-2869-4eba-ac9a-639aef6dc25b\" target=\"_blank\">\n            <i>Personal Resume</i>\n          </a>\n\n          <p>{content}</p>\n          <div className=\"social-media-container\">\n            <a\n              href=\"https://www.linkedin.com/in/marco-maigua-66822584/\"\n              target=\"_blank\"\n            >\n              <img src={linkedinLogo} />\n            </a>\n            <a href=\"https://github.com/nemesis1346\" target=\"_blank\">\n              <img src={githubLogo} />\n            </a>\n            <a href=\"https://gitlab.com/nemesis1346\" target=\"_blank\">\n              <img src={gitlabLogo} />\n            </a>\n            <a href=\"https://medium.com/@nemesis1346\" target=\"_blank\">\n              <img src={mediumLogo} />\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToPropsHomePage = state => {\n  //In this case objects is gonna be applied to the props of the component\n  return {\n    professionalProfilePhoto:\n      state.professionalPageReducer.professionalProfilePhoto,\n    professionalProfileContent:\n      state.professionalPageReducer.professionalProfileContent,\n    linkedinLogo: state.professionalPageReducer.linkedinLogo,\n    githubLogo: state.professionalPageReducer.githubLogo,\n    gitlabLogo: state.professionalPageReducer.gitlabLogo,\n    mediumLogo: state.professionalPageReducer.mediumLogo,\n    language: state.constantReducer.language\n  };\n};\n\nexport default connect(\n  mapStateToPropsHomePage,\n  {\n    getProfessionalImage,\n    getProfessionalContent,\n    getLinkedinLogo,\n    getGithubLogo,\n    getGitlabLogo,\n    getMediumLogo\n  }\n)(HomePage);\n","import FirebaseApi from \"../api/FirebaseApi\";\nimport {\n  ERROR_MIDDLEWARE,\n  GET_BLOGS_SUCCESS,\n} from \"../constants/types\";\n\nexport const getBlogs = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    FirebaseApi.getDocuments(\"/posts\")\n      .then(res => {\n        let postsList = [];\n        res.forEach(doc => {\n          console.log(`${doc.id} => ${doc.data()}`);\n          postsList.push(doc.data());\n        });\n        dispatch(getBlogsSuccess(postsList));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\n\nexport const getBlogsByDatetime = () => {\n  return (dispatch) => {\n    FirebaseApi.getDocumentsOrderedBy('/posts', 'timestamp')\n      .then(res => {\n        let postsList = [];\n        res.forEach(doc => {\n          console.log(`${doc.id} => ${doc.data()}`);\n          postsList.push(doc.data());\n        });\n        dispatch(getBlogsSuccess(postsList));\n      })\n      .catch(err => {\n        console.log('ERROR GET BLOGS BY DATETIME');\n        console.log(err);\n        dispatch(handleError(err.message));\n      });\n  }\n}\n\n\nconst getBlogsSuccess = posts => {\n  return {\n    type: GET_BLOGS_SUCCESS,\n    posts: posts\n  };\n};\n\nconst handleError = message => {\n  return {\n    type: ERROR_MIDDLEWARE,\n    error: message\n  };\n};\n","import React from 'react';\nimport '../styles/blogCard.scss';\n\n\nclass BlogCard extends React.Component {\n\n    render() {\n        const { post } = this.props;\n        console.log(post.url);\n        return (\n            <div className=\"post card\">\n                <div className=\"img-container\">\n                <a href={post.url} target=\"_blank\"> \n                    <img src={post.imageUrl}></img> </a>\n                </div>\n                <div className=\"card-body\">\n                    <p >{post.date}</p>\n                    <h2>{post.title}</h2>\n                    <p >{post.titleText}</p>\n                       <a href={post.url}  target=\"_blank\"><i className=\"waves-effect waves-light btn\">Read more...</i></a> \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BlogCard;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    getBlogs,getBlogsByDatetime\n} from \"../../actions/blogFirebaseActions\";\nimport BlogCard from '../cards/BlogCard';\nimport { Message } from 'semantic-ui-react'\nimport '../styles/blogPage.scss';\n\n//This page done for the firebase framework with just links of medium\nclass BlogFirebasePage extends React.Component {\n    componentWillMount() {\n        //this.props.getBlogs();\n        this.props.getBlogsByDatetime();\n    }\n    render() {\n        console.log('POSTS');\n        console.log(this.props);\n        const {\n            posts,\n            error\n        } = this.props;\n        return (\n            <div className=\"blog-page-container\">\n                {posts && posts.length > 0 ? (\n                    <div className=\"app-card-list\" id=\"app-card-list\">\n                        {\n                            Object\n                                .keys(posts)\n                                .map(key => <BlogCard key={key} index={key} post={posts[key]} />)\n                        }\n                    </div>\n                ) : (\n                        <Message >\n                            <Message.Header>Error</Message.Header>\n                            <p>{error}</p>\n                        </Message>\n                    )}\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToPropsBlogPage = state => {\n    //In this case objects is gonna be applied to the props of the component\n    return {\n        posts: state.blogPageReducer.posts,\n        error: state.blogPageReducer.error\n    };\n};\n\nexport default connect(\n    mapStateToPropsBlogPage,\n    {\n        getBlogs,getBlogsByDatetime\n    }\n)(BlogFirebasePage);\n","import axios from 'axios';\nimport { parseResponse } from '../utils/Utils';\n\n//const instance = axios.create({ baseURL: 'http://35.190.131.104:8888' })\n//const instance = axios.create({ baseURL: 'http://localhost:8888' }) // this is for blockchain\nconst instanceDefault = axios.create({ baseURL: 'http://localhost:8000' }); // this is for firebase\n/**\n * This File is for parsing and anything processing middleware with diferent directions\n */\nexport default {\n    blog: {\n        getAllBlogs: () => {\n            return instanceDefault.get('/api/blogs')\n        }\n           \n    }\n}\n","import {\n  ERROR_MIDDLEWARE,\n  GET_BLOGS_SUCCESS,\n} from \"../constants/types\";\nimport djangoHttpApi from '../api/djangoHttpApi';\nimport {parseResponseDjango} from '../utils/Utils';\n\nexport const getBlogs = () => {\n  return (dispatch) => {\n    djangoHttpApi.blog.getAllBlogs()\n      .then(res => {\n        console.log('Response')\n        console.log(res)\n        let result=parseResponseDjango(res)\n        console.log(result)\n          // let postsList = [];\n          // res.forEach(doc => {\n          //   postsList.push(doc.data());\n          // });\n        //dispatch(getBlogsSuccess(postsList));\n      })\n      .catch(err => {\n        console.log(err)\n        dispatch(handleError(err.message));\n      });\n  };\n};\n\n\nconst getBlogsSuccess = posts => {\n    return {\n      type: GET_BLOGS_SUCCESS,\n      posts: posts\n    };\n  };\n  \n  const handleError = message => {\n    return {\n      type: ERROR_MIDDLEWARE,\n      error: message\n    };\n  };\n  ","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    getBlogs,\n} from \"../../actions/blogDjangoActions\";\nimport BlogCard from '../cards/BlogCard';\nimport { Message } from 'semantic-ui-react'\nimport '../styles/blogPage.scss';\n\n//This page done for the firebase framework with just links of medium\nclass BlogDjangoPage extends React.Component {\n    componentWillMount() {\n        this.props.getBlogs();\n    }\n    render() {\n        console.log('POSTS');\n        console.log(this.props);\n        const {\n            posts,\n            error\n        } = this.props;\n        return (\n            <div className=\"blog-page-container\">\n                {posts && posts.length > 0 ? (\n                    <div className=\"app-card-list\" id=\"app-card-list\">\n                        {\n                            Object\n                                .keys(posts)\n                                .map(key => <BlogCard key={key} index={key} post={posts[key]} />)\n                        }\n                    </div>\n                ) : (\n                        <Message >\n                            <Message.Header>Error</Message.Header>\n                            <p>{error}</p>\n                        </Message>\n                    )}\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToPropsBlogPage = state => {\n    //In this case objects is gonna be applied to the props of the component\n    return {\n        posts: state.blogPageReducer.posts,\n        error: state.blogPageReducer.error\n    };\n};\n\nexport default connect(\n    mapStateToPropsBlogPage,\n    {\n        getBlogs,\n    }\n)(BlogDjangoPage);\n","export const parseResponse = (response) => {\n    let body = JSON.parse(response);\n    if (body.status == '200') {\n        return body.data;\n    } else {\n        return body.message;\n    }\n}\nexport const parseResponseDjango = (response) => {\n   \n    if (response.status == '200') {\n        return response.data;\n    } else {\n        return 'Something went wrong';\n    }\n}\n//  MORE EFFICIENT, BUT LESS FUN\n/**\n * @description Remove duplicates from an array of objects in javascript\n * @param arr - Array of objects\n * @param prop - Property of each object to compare\n * @returns {Array}\n */\nexport const removeDuplicatesProp = (arr, prop) => {\n    let obj = {};\n    return Object.keys(arr.reduce((prev, next) => {\n        if (!obj[next[prop]]) obj[next[prop]] = next;\n        return obj;\n    }, obj)).map((i) => obj[i]);\n}\n\n\nexport const parseContent = (content) => {\n    // console.log(content);\n    let entireContent = content;\n    let finalResult = [];\n\n    //Processing for the entire sentence\n    for (let index = 0; index <= entireContent.length; index++) {\n        for (let j = index; j <= entireContent.length; j++) {\n            const currentResult = entireContent.slice(index, j).trim();\n            if (currentResult) {\n                finalResult.push(currentResult.toLowerCase());\n            }\n        }\n    }\n    finalResult = this.removeDuplicates(finalResult);\n    return finalResult;\n}\n/**\n * @description Remove duplicates\n */\nexport const removeDuplicates = (arr) => {\n    let unique_array = []\n    for (let i = 0; i < arr.length; i++) {\n        if (unique_array.indexOf(arr[i]) == -1) {\n            unique_array.push(arr[i])\n        }\n    }\n    return unique_array\n}","import FirebaseApi from \"../api/FirebaseApi\";\nimport {\n  ERROR_MIDDLEWARE,\n  GET_PROJECTS_SUCCESS,\n} from \"../constants/types\";\n\nexport const getProjects = () => {\n    console.log('gets here');\n  return (dispatch) => {\n    FirebaseApi.getDocuments(\"/projects\")\n      .then(res => {\n          let projectsList = [];\n          res.forEach(doc => {\n            console.log(`${doc.id} => ${doc.data()}`);\n            projectsList.push(doc.data());\n          });\n        dispatch(getProjectsSuccess(projectsList));\n      })\n      .catch(err => {\n        dispatch(handleError(err.message));\n      });\n  };\n};\n\nexport const getProjectsByDatetime = () => {\n  return (dispatch) => {\n    FirebaseApi.getDocumentsOrderedBy('/projects', 'timestamp')\n      .then(res => {\n        let projectsList = [];\n        res.forEach(doc => {\n          console.log(`${doc.id} => ${doc.data()}`);\n          projectsList.push(doc.data());\n        });\n        dispatch(getProjectsSuccess(projectsList));\n      })\n      .catch(err => {\n        console.log('ERROR GET PROJECTS BY DATETIME');\n        console.log(err);\n        dispatch(handleError(err.message));\n      });\n  }\n}\n\n\nconst getProjectsSuccess = projects => {\n    return {\n      type: GET_PROJECTS_SUCCESS,\n      projects: projects\n    };\n  };\n  \n  const handleError = message => {\n    return {\n      type: ERROR_MIDDLEWARE,\n      error: message\n    };\n  };\n  ","import React from 'react';\nimport '../styles/projectCard.scss';\nimport { connect } from \"react-redux\";\nimport { SPANISH_LANGUAGE, ENGLISH_LANGUAGE } from '../../constants/types';\n\nclass ProjectCard extends React.Component {\n\n    render() {\n        const { project } = this.props;\n        console.log(project);\n        let language = this.props.language;\n        let title;\n        let text;\n        switch (language) {\n            case SPANISH_LANGUAGE:\n                title = project.titleSpanish;\n                text = project.textSpanish;\n                break;\n            case ENGLISH_LANGUAGE:\n                title = project.titleEnglish;\n                text = project.textEnglish;\n                break;\n            default:\n                title = project.titleEnglish;\n                text = project.textEnglish;\n                break;\n        }\n        console.log('title and text');\n        console.log(title);\n        console.log(text);\n        return (\n            <div className=\"post card\">\n                <div className=\"img-container\">\n                    <a href={project.urlProject} target=\"_blank\">\n                        <img src={project.imageUrl}></img> </a>\n                </div>\n                <div className=\"card-body\">\n                    <h2>{title}</h2>\n                    <p >{text}</p>\n                    {((project.urlProject) && (project.urlProject != \"\")) ? <a href={project.urlProject} target=\"_blank\"><i className=\"waves-effect waves-light btn\">See Project</i></a> : null}\n                    {((project.urlGithub) && (project.urlGithub != \"\")) ? <a href={project.urlGithub} target=\"_blank\"><i className=\"waves-effect waves-light btn button-style\">Github</i></a> : null}\n                    {((project.urlFile) && (project.urlFile != \"\")) ? <a href={project.urlFile} target=\"_blank\"><i className=\"waves-effect waves-light btn button-style\">Documentation</i></a> : null}\n                    {((project.urlExecutable) && (project.urlExecutable != \"\")) ? <a href={project.urlExecutable} target=\"_blank\"><i className=\"waves-effect waves-light btn button-style\">Executable(APK)</i></a> : null}\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToPropsProjectCard = state => {\n    //In this case objects is gonna be applied to the props of the component\n    return {\n        language: state.constantReducer.language\n    };\n};\n\nexport default connect(mapStateToPropsProjectCard, null)(ProjectCard);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    getProjects,getProjectsByDatetime\n} from \"../../actions/projectFirebaseActions\";//change\nimport ProjectCard from '../cards/ProjectCard';\nimport { Message } from 'semantic-ui-react'\nimport '../styles/blogPage.scss';\n\n//This page done for the firebase framework with just links of medium\nclass ProjectsPage extends React.Component {\n    componentWillMount() {\n        //this.props.getProjects();\n        this.props.getProjectsByDatetime();\n    }\n    render() {\n        console.log('PROJECTS');\n        console.log(this.props);\n        console.log('Language ');\n        console.log(this.props.language);\n        const {\n            projects,\n            error\n        } = this.props;\n        return (\n            <div>\n                {projects && projects.length > 0 ? (\n                    <div className=\"app-card-list\" id=\"app-card-list\">\n                        {\n                            Object\n                                .keys(projects)\n                                .map(key => <ProjectCard key={key} index={key} project={projects[key]} />)\n                        }\n                    </div>\n                ) : (\n                        <Message >\n                            <Message.Header>Error</Message.Header>\n                            <p>{error}</p>\n                        </Message>\n                    )}\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToPropsProjectsPage = state => {\n    //In this case objects is gonna be applied to the props of the component\n    return {\n        projects: state.projectsPageReducer.projects,\n        error: state.projectsPageReducer.error,\n        language:state.constantReducer.language\n    };\n};\n\nexport default connect(\n    mapStateToPropsProjectsPage,\n    {\n        getProjects,getProjectsByDatetime\n    }\n)(ProjectsPage);\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport NavBar from \"./components/navigation/NavBar\";\nimport HomePage from \"./components/pages/HomePage\";\nimport BlogFirebasePage from './components/pages/BlogFirebasePage';\nimport BlogDjangoPage from './components/pages/BlogDjangoPage';\nimport ProjectsPage from './components/pages/ProjectsPage';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <NavBar />\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/blogFirebasePage\" exact component={BlogFirebasePage} />\n          <Route path = \"/blogDjangoPage\" exact component = {BlogDjangoPage}></Route>\n          <Route path = '/projects' exact component = {ProjectsPage}></Route>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","\nconst userReducer = (state = {}, action = {}) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import {\n  GET_IMAGE_SUCCESS,\n  GET_CONTENT_SUCCESS,\n  GET_GITHUB_LOGO_SUCCESS,\n  GET_LINKEDIN_LOGO_SUCCESS,\n  GET_GITLAB_LOGO_SUCCESS,\n  GET_MEDIUM_LOGO_SUCCESS\n} from \"../constants/types\";\nconst initState = {\n  professionalProfilePhoto: null,\n  professionalProfileContent: null,\n  linkedinLogo: null,\n  mediumLogo: null,\n  githubLogo: null,\n  gitlabLogo: null\n};\nconst professionalPageReducer = (state = initState, action = {}) => {\n  switch (action.type) {\n    case GET_IMAGE_SUCCESS:\n      return {\n        ...state,\n        professionalProfilePhoto: action.professionalProfilePhoto\n      };\n    case GET_CONTENT_SUCCESS:\n      return {\n        ...state,\n        professionalProfileContent: action.professionalProfileContent\n      };\n    case GET_LINKEDIN_LOGO_SUCCESS:\n      return {\n        ...state,\n        linkedinLogo: action.linkedinLogo\n      };\n    case GET_MEDIUM_LOGO_SUCCESS:\n      return {\n        ...state,\n        mediumLogo: action.mediumLogo\n      };\n    case GET_GITHUB_LOGO_SUCCESS:\n      return {\n        ...state,\n        githubLogo: action.githubLogo\n      };\n    case GET_GITLAB_LOGO_SUCCESS:\n      return {\n        ...state,\n        gitlabLogo: action.gitlabLogo\n      };\n    default:\n      return state;\n  }\n};\n\nexport default professionalPageReducer;\n","import { GET_BLOGS_SUCCESS, ERROR_MIDDLEWARE } from '../constants/types';\n\nconst initState = {\n    posts: [],\n    error:''\n}\n\nconst blogPageReducer = (state = initState, action = {}) => {\n    switch (action.type) {\n        case GET_BLOGS_SUCCESS:\n            return {\n                ...state,\n                posts: action.posts\n            }\n        case ERROR_MIDDLEWARE:\n            return {\n                ...state,\n                error: action.error\n            }\n        default:\n            return state;\n    }\n}\n\nexport default blogPageReducer;","import { GET_PROJECTS_SUCCESS, ERROR_MIDDLEWARE } from '../constants/types';\n\nconst initState = {\n    projects: [],\n    error:''\n}\n\nconst projectsPageReducer = (state = initState, action = {}) => {\n    switch (action.type) {\n        case GET_PROJECTS_SUCCESS:\n            return {\n                ...state,\n                projects: action.projects\n            }\n        case ERROR_MIDDLEWARE:\n            return {\n                ...state,\n                error: action.error\n            }\n        default:\n            return state;\n    }\n}\n\nexport default projectsPageReducer;","import {\n    SET_LANGUAGE\n} from '../constants/types';\n\nconst initState = {\n    language: 'language'\n}\n\nconst constantReducer = (state = initState, action = {}) => {\n    switch (action.type) {\n        case SET_LANGUAGE:\n            return {\n                ...constantReducer,\n                language: action.language\n            }\n        default:\n            return state;\n    }\n}\nexport default constantReducer;","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport professionalPageReducer from './professionalPageReducer';\nimport blogPageReducer from './blogPageReducer';\nimport projectsPageReducer from './projectsPageReducer';\nimport constantReducer from './constantReducers';\n//This is for comining all different reducers\nexport default combineReducers({\n    userReducer,\n    professionalPageReducer,\n    blogPageReducer,\n    projectsPageReducer,\n    constantReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport FirestoreConfig from './api/FirebaseConfig';\nimport FirebaseConfig from './api/FirebaseConfig';\nimport \"semantic-ui-css/semantic.min.css\";\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(FirestoreConfig),\n        reactReduxFirebase(FirebaseConfig)\n    )\n);\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}